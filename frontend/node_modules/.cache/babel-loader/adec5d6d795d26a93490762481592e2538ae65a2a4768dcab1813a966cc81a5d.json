{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Documentos/IES/Projeto1/IES_eDuca/frontend/src/ClassPage.js\",\n  _s = $RefreshSig$();\n// ClassPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ClassPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClassPage = ({\n  match\n}) => {\n  _s();\n  const [classDetails, setClassDetails] = useState(null);\n  const classId = match.params.classId;\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`/classes/${classId}`);\n      const data = await response.json();\n      setClassDetails(data);\n    } catch (error) {\n      console.error('Error fetching class details:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData(); // Initial data fetch\n\n    // Set up an interval to fetch updated data every, for example, 10 seconds\n    const intervalId = setInterval(fetchData, 10000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [classId]);\n  if (!classDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Go Back to Classes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: classDetails.classname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"School: \", classDetails.school]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), classDetails.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: subject.name\n            }, subject.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: classDetails.students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), classDetails.subjects.map(subject => {\n              var _student$grades$find;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_student$grades$find = student.grades.find(grade => grade.subjectId === subject.id)) === null || _student$grades$find === void 0 ? void 0 : _student$grades$find.value) || 'N/A'\n              }, subject.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this);\n            })]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ClassPage, \"ei/jTI2iswPSENE5OHP2IfFFWxo=\");\n_c = ClassPage;\nexport default ClassPage;\nvar _c;\n$RefreshReg$(_c, \"ClassPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","ClassPage","match","_s","classDetails","setClassDetails","classId","params","fetchData","response","fetch","data","json","error","console","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","to","classname","school","className","subjects","map","subject","name","id","students","student","_student$grades$find","grades","find","grade","subjectId","value","_c","$RefreshReg$"],"sources":["/home/miguel/Documentos/IES/Projeto1/IES_eDuca/frontend/src/ClassPage.js"],"sourcesContent":["// ClassPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ClassPage.css';\n\nconst ClassPage = ({ match }) => {\n  const [classDetails, setClassDetails] = useState(null);\n  const classId = match.params.classId;\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`/classes/${classId}`);\n      const data = await response.json();\n      setClassDetails(data);\n    } catch (error) {\n      console.error('Error fetching class details:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(); // Initial data fetch\n\n    // Set up an interval to fetch updated data every, for example, 10 seconds\n    const intervalId = setInterval(fetchData, 10000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [classId]);\n\n  if (!classDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <Link to=\"/\">Go Back to Classes</Link>\n      <h2>{classDetails.classname}</h2>\n      <p>School: {classDetails.school}</p>\n\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>Student</th>\n              {classDetails.subjects.map((subject) => (\n                <th key={subject.id}>{subject.name}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {classDetails.students.map((student) => (\n              <tr key={student.id}>\n                <td>{student.name}</td>\n                {classDetails.subjects.map((subject) => (\n                  <td key={subject.id}>\n                    {student.grades.find((grade) => grade.subjectId === subject.id)?.value || 'N/A'}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ClassPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}