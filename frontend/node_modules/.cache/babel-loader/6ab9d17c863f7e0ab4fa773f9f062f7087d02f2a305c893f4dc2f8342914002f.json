{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Documentos/IES/Projeto1/IES_eDuca/frontend/src/ClassPage.js\",\n  _s = $RefreshSig$();\n// ClassPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ClassPage.css';\nimport WebSocketService from './WebSocketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClassPage = ({\n  match\n}) => {\n  _s();\n  const [classDetails, setClassDetails] = useState(null);\n  const [studentDetails, setStudentDetails] = useState(null);\n  const studentId = match.params.studentId;\n  const classId = match.params.classId;\n\n  //notifications\n  const [notifications, setNotifications] = useState([]);\n  const webSocketService = WebSocketService(onMessage);\n\n  // Define onMessage function before using it in useEffect\n  function onMessage(notification) {\n    setNotifications(prevNotifications => [...prevNotifications, notification]);\n  }\n  useEffect(() => {\n    webSocketService.connect();\n\n    // Subscribe to the class (replace 'ClassName' with the actual class name)\n    const subscription = webSocketService.subscribeToClass('ClassName');\n    return () => {\n      // Check if subscription is not null before unsubscribing\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n      webSocketService.disconnect();\n    };\n  }, [webSocketService]);\n  const fetchData = async () => {\n    try {\n      if (studentId) {\n        const response1 = await fetch(`/students/${studentId}`);\n        const data1 = await response1.json();\n        setStudentDetails(data1);\n      }\n      const response = await fetch(`/classes/${classId}`);\n      const data = await response.json();\n      setClassDetails(data);\n    } catch (error) {\n      console.error('Error fetching class details:', error);\n    }\n  };\n  const calculateAverage = grades => {\n    if (grades.length === 0) {\n      return undefined;\n    }\n    const sum = grades.reduce((accumulator, grade) => accumulator + grade.grade, 0);\n    return (sum / grades.length).toFixed(1);\n  };\n  const calculateSubjectAverage = (student, subjectId) => {\n    const subjectGrades = student.grades.filter(grade => grade.subject.id === subjectId);\n    return calculateAverage(subjectGrades);\n  };\n  useEffect(() => {\n    fetchData(); // Initial data fetch\n\n    // Set up an interval to fetch updated data every, for example, 10 seconds\n    const intervalId = setInterval(fetchData, 3000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [classId, studentId]);\n  if (!classDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Go Back to Classes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: classDetails.classname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"School: \", classDetails.school]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), classDetails.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: subject.name\n            }, subject.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: classDetails.students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), classDetails.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: calculateSubjectAverage(student, subject.id) || 'N/A'\n            }, subject.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this))]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: notification.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(ClassPage, \"3V3k67Fr1I0eO6pOfUxL1LbR9fg=\");\n_c = ClassPage;\nexport default ClassPage;\nvar _c;\n$RefreshReg$(_c, \"ClassPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","WebSocketService","jsxDEV","_jsxDEV","ClassPage","match","_s","classDetails","setClassDetails","studentDetails","setStudentDetails","studentId","params","classId","notifications","setNotifications","webSocketService","onMessage","notification","prevNotifications","connect","subscription","subscribeToClass","unsubscribe","disconnect","fetchData","response1","fetch","data1","json","response","data","error","console","calculateAverage","grades","length","undefined","sum","reduce","accumulator","grade","toFixed","calculateSubjectAverage","student","subjectId","subjectGrades","filter","subject","id","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","to","classname","school","className","subjects","map","name","students","index","message","_c","$RefreshReg$"],"sources":["/home/miguel/Documentos/IES/Projeto1/IES_eDuca/frontend/src/ClassPage.js"],"sourcesContent":["// ClassPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ClassPage.css';\nimport WebSocketService from './WebSocketService';\n\nconst ClassPage = ({ match }) => {\n  const [classDetails, setClassDetails] = useState(null);\n  const [studentDetails, setStudentDetails] = useState(null);\n\n  const studentId = match.params.studentId;\n  const classId = match.params.classId;\n\n  //notifications\n  const [notifications, setNotifications] = useState([]);\n  const webSocketService = WebSocketService(onMessage);\n\n  // Define onMessage function before using it in useEffect\n  function onMessage(notification) {\n    setNotifications((prevNotifications) => [...prevNotifications, notification]);\n  }\n\n  useEffect(() => {\n    webSocketService.connect();\n\n    // Subscribe to the class (replace 'ClassName' with the actual class name)\n    const subscription = webSocketService.subscribeToClass('ClassName');\n\n    return () => {\n      // Check if subscription is not null before unsubscribing\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n      webSocketService.disconnect();\n    };\n  }, [webSocketService]);\n\n  const fetchData = async () => {\n    try {\n      if (studentId) {\n        const response1 = await fetch(`/students/${studentId}`);\n        const data1 = await response1.json();\n        setStudentDetails(data1);\n      }\n\n      const response = await fetch(`/classes/${classId}`);\n      const data = await response.json();\n      setClassDetails(data);\n    } catch (error) {\n      console.error('Error fetching class details:', error);\n    }\n  };\n\n  const calculateAverage = (grades) => {\n    if (grades.length === 0) {\n      return undefined;\n    }\n\n    const sum = grades.reduce((accumulator, grade) => accumulator + grade.grade, 0);\n    return (sum / grades.length).toFixed(1);\n  };\n\n  const calculateSubjectAverage = (student, subjectId) => {\n    const subjectGrades = student.grades.filter((grade) => grade.subject.id === subjectId);\n    return calculateAverage(subjectGrades);\n  };\n\n  useEffect(() => {\n    fetchData(); // Initial data fetch\n\n    // Set up an interval to fetch updated data every, for example, 10 seconds\n    const intervalId = setInterval(fetchData, 3000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [classId, studentId]);\n\n  if (!classDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <Link to=\"/\">Go Back to Classes</Link>\n      <h2>{classDetails.classname}</h2>\n      <p>School: {classDetails.school}</p>\n\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>Student</th>\n              {classDetails.subjects.map((subject) => (\n                <th key={subject.id}>{subject.name}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {classDetails.students.map((student) => (\n              <tr key={student.id}>\n                <td>{student.name}</td>\n                {classDetails.subjects.map((subject) => (\n                  <td key={subject.id}>\n                    {calculateSubjectAverage(student, subject.id) || 'N/A'}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <h1>Notifications</h1>\n        <ul>\n          {notifications.map((notification, index) => (\n            <li key={index}>{notification.message}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ClassPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}