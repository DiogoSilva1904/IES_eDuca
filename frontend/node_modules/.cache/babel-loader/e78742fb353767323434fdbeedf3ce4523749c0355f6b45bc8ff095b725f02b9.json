{"ast":null,"code":"// WebSocketService.js\n\nimport { Client } from '@stomp/stompjs';\nconst WebSocketService = onMessageCallback => {\n  const client = new Client({\n    brokerURL: 'ws://localhost:8080/ws',\n    // Your WebSocket endpoint\n    debug: function (str) {\n      console.log(str);\n    },\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000\n  });\n  client.onConnect = () => {\n    console.log('WebSocket connected');\n    const subscription = client.subscribe(`/user/queue/notifications`, message => {\n      onMessageCallback(JSON.parse(message.body));\n      //console.log('Received message:', JSON.parse(message.body));\n    });\n  };\n\n  client.onDisconnect = () => {\n    console.log('WebSocket disconnected');\n  };\n  client.onStompError = frame => {\n    console.error('WebSocket error:', frame.headers.message);\n  };\n  const connect = () => {\n    client.activate();\n    console.log('client connecting...');\n  };\n  const disconnect = () => {\n    client.deactivate();\n  };\n  const subscribeToClass = className => {\n    if (client.connected) {\n      //const subscription = client.subscribe(`/class/${className}`, (message) => {\n      const subscription = client.subscribe(`/topic/notifications`, message => {\n        onMessageCallback(JSON.parse(message.body));\n        console.log('Received message:', JSON.parse(message.body));\n      });\n      return subscription;\n    } else {\n      console.error('WebSocket not connected');\n      return null;\n    }\n  };\n  return {\n    connect,\n    disconnect,\n    subscribeToClass\n  };\n};\n_c = WebSocketService;\nexport default WebSocketService;\nvar _c;\n$RefreshReg$(_c, \"WebSocketService\");","map":{"version":3,"names":["Client","WebSocketService","onMessageCallback","client","brokerURL","debug","str","console","log","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","subscription","subscribe","message","JSON","parse","body","onDisconnect","onStompError","frame","error","headers","connect","activate","disconnect","deactivate","subscribeToClass","className","connected","_c","$RefreshReg$"],"sources":["/home/miguel/Documentos/IES/Projeto1/IES_eDuca/frontend/src/WebSocketService.js"],"sourcesContent":["// WebSocketService.js\n\nimport { Client } from '@stomp/stompjs';\n\nconst WebSocketService = (onMessageCallback) => {\n  const client = new Client({\n    brokerURL: 'ws://localhost:8080/ws', // Your WebSocket endpoint\n    debug: function (str) {\n      console.log(str);\n    },\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000,\n  });\n\n  client.onConnect = () => {\n    console.log('WebSocket connected');\n    const subscription = client.subscribe(`/user/queue/notifications`, (message) => {\n      onMessageCallback(JSON.parse(message.body));\n      //console.log('Received message:', JSON.parse(message.body));\n    });\n  };\n\n  client.onDisconnect = () => {\n    console.log('WebSocket disconnected');\n  };\n\n  client.onStompError = (frame) => {\n    console.error('WebSocket error:', frame.headers.message);\n  };\n\n  const connect = () => {\n    client.activate();\n    console.log('client connecting...');\n  };\n\n  const disconnect = () => {\n    client.deactivate();\n  };\n\n  const subscribeToClass = (className) => {\n    if (client.connected) {\n      //const subscription = client.subscribe(`/class/${className}`, (message) => {\n      const subscription = client.subscribe(`/topic/notifications`, (message) => {\n        onMessageCallback(JSON.parse(message.body));\n        console.log('Received message:', JSON.parse(message.body));\n      });\n\n      return subscription;\n    } else {\n      console.error('WebSocket not connected');\n      return null;\n    }\n  };\n\n  return { connect, disconnect, subscribeToClass };\n};\n\nexport default WebSocketService;\n"],"mappings":"AAAA;;AAEA,SAASA,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,gBAAgB,GAAIC,iBAAiB,IAAK;EAC9C,MAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC;IACxBI,SAAS,EAAE,wBAAwB;IAAE;IACrCC,KAAK,EAAE,SAAAA,CAAUC,GAAG,EAAE;MACpBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC;IACDG,cAAc,EAAE,IAAI;IACpBC,iBAAiB,EAAE,IAAI;IACvBC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EAEFR,MAAM,CAACS,SAAS,GAAG,MAAM;IACvBL,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,MAAMK,YAAY,GAAGV,MAAM,CAACW,SAAS,CAAE,2BAA0B,EAAGC,OAAO,IAAK;MAC9Eb,iBAAiB,CAACc,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC;MAC3C;IACF,CAAC,CAAC;EACJ,CAAC;;EAEDf,MAAM,CAACgB,YAAY,GAAG,MAAM;IAC1BZ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC,CAAC;EAEDL,MAAM,CAACiB,YAAY,GAAIC,KAAK,IAAK;IAC/Bd,OAAO,CAACe,KAAK,CAAC,kBAAkB,EAAED,KAAK,CAACE,OAAO,CAACR,OAAO,CAAC;EAC1D,CAAC;EAED,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpBrB,MAAM,CAACsB,QAAQ,CAAC,CAAC;IACjBlB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC,CAAC;EAED,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACvBvB,MAAM,CAACwB,UAAU,CAAC,CAAC;EACrB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtC,IAAI1B,MAAM,CAAC2B,SAAS,EAAE;MACpB;MACA,MAAMjB,YAAY,GAAGV,MAAM,CAACW,SAAS,CAAE,sBAAqB,EAAGC,OAAO,IAAK;QACzEb,iBAAiB,CAACc,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC;QAC3CX,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEQ,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC;MAC5D,CAAC,CAAC;MAEF,OAAOL,YAAY;IACrB,CAAC,MAAM;MACLN,OAAO,CAACe,KAAK,CAAC,yBAAyB,CAAC;MACxC,OAAO,IAAI;IACb;EACF,CAAC;EAED,OAAO;IAAEE,OAAO;IAAEE,UAAU;IAAEE;EAAiB,CAAC;AAClD,CAAC;AAACG,EAAA,GApDI9B,gBAAgB;AAsDtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}